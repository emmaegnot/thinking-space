<html lang="en">
<%- include('./partials/head.ejs') %>
<style>
#overlay
{
	position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: none; 
}
</style>
    <body>
        <nav class="mouseM">
        <ul class="header">
            <li><a>THE THINKING SPACE</a></li>
            <li class="home" style="float: right;"><a href="/"><i class="fa-solid fa-house"></i></a></li>
        </ul>
        </nav>
        <div class="maincontainer">
            <div class="container1 mouseM" id="gameCanvas">  
                <h1 class="colouredText">Feeling Families</h1>
                <div class="bodyText" id="instructionsDiv"></div>
                <p id="instructions" class="bodyText">The aim of the game is to put feelings into families!
                    <br>First, choose the head of the family. This is a key emotion.
                    <br>Words will start coming down and you need to catch them in the house if that word is related to the head of the family.
                    <br>Move your house left and right using the arrows to catch the falling words and avoid the unrelated words.
                    <br>You'll get points for every feeling word you bring home!
                </p>
                <!--need to centre this button-->
                <button onclick="startGame('angry')" class="button" id="angryButton">Angry</button>
				<button onclick="startGame('disgusted')" class="button" id="disgustedButton">Disgusted</button>
				<button onclick="startGame('fearful')" class="button" id="fearfulButton">Fearful</button>
				<button onclick="startGame('happy')" class="button" id="happyButton">Happy</button>
				<button onclick="startGame('sad')" class="button" id="sadButton">Sad</button>
				<button onclick="startGame('surprised')" class="button" id="surprisedButton">Surprised</button>
                
            </div>

            <div class="container2 mouseM">
                <h1 class="colouredText">Your Feelings Family</h1>
                <p class="bodyText" id="score">Score: 0</p>
                <div class="houseContainer">
                    <img class="logo" id="houseImage" src="images/house.png" alt="house image" style="width: 300px; height: auto;">
                     <!--this is where the words from the game will be added-->
                    <div class="houseText" id="correct"><ul id ="correctList" style="list-style-type: none;"></ul></div>
                    <div class="houseText" id="incorrect"><ul id ="incorrectList" style="list-style-type: none;"></ul></div>
                </div>
            </div>
			
			<div id="gameOverPopup" class="index-container mouseM" style="display:none">
			 <h2>Game Over</h2>
			 <p id="gameScore"></p>
			 <p id="correctWords"></p>
			 <p id="incorrectWords"></p>
			 <p id="percentage"></p>
			 <button onclick="closePopup()">Close</button>
			</div>

        </div>
          <div class="clear"></div>

        <!-- Footer with logo and motto aligned to left and right -->
        <footer class="footer">
        <img class="logo" src="images/logo.png" alt="Raymer Enterprises Ltd" width="212" height="104">
        <span class="motto mouseM">With emotional health in mind</span>
        </footer>

        <script>
            var word1;
            //additional words 1 - angry
            var level1angry = ['aggressive', 'bitter', 'critical', 'distant', 'frustrated', 'hateful', 'humiliated', 'hurt', 'insecure', 'irritated', 'mad']
            var fillerWordsAngry = ['happy', 'bright', 'bored', 'silly', 'strong', 'tense', 'confused']
			// additional words 2 - disgusted
			var level1disgusted = ["embarassed", "awkward", "repelled", "offended", "nauseated", "humiliated", "ashamed", "disgraced"]
			var fillerWordsDisgusted = ["silly", "disappointed", "shocked", "irritated", "excited"]
			// additional words 3 - fearful
			var level1fearful = ["scared", "frightened", "afraid", "concerned", "anxious", "worried", "terrified", "jittery", "panicked", "tense"]
			var fillerWordsFearful = ["bright", "blue", "isolated", "calm", "bored", "content"]
			// additional words 4 - happy
			var level1happy = ["content", "calm", "comfortable", "bright", "elated", "glad", "satisfied", "pleased", "optimistic", "fulfilled", "excited"]
			var fillerWordsHappy = ["isolated", "tense", "bored", "dazed", "blue", "insecure"]
			// additional words 5 - sad
			var level1sad = ["bitter", "blue", "concerned", "depressed", "disappointed", "down", "heartbroken", "hurt", "isolated", "pessimistic", "worried"]
			var fillerWordsSad = ["scared", "bored", "confused", "afraid", "frightened", "frustrated", "shocked"]
			// additional words 6 - surprised
			var level1surprised = ["stunned", "shocked", "appalled", "frightened", "astonished", "startled", "sensational", "astounded"]
			var fillerWordsSurprised = ["happy", "calm", "worried", "confused", "strong", "scared"]
			
			var level1words = []
			var fillerWords = []
			
            var wordsToFall = [];
            var fallingWords = [];
	    // Correct words: words that should be in the family and are in the family
	    // Correct omissions: words that should not be in the family and are not in the family
	    // Misclassifications: words that should not be in the family but are in the family
	    // Missed words: words that should  be in the family but are not in the family
	    // Percent correct = (correct words + correct omissions) / (correct words + correct omissions + misclassifications + missed words) * 100%
	    var correctWords = 0, correctOmissions = 0, misclassifications = 0, missedWords = 0;
            const image = document.getElementById("houseImage")
            let rightPressed = false;
            let leftPressed = false;
            let ticker = -1;
            let scoreText = "Score: "

            function startGame(keyword) {
                gameArea.start();
                // create components for words, they have a random x beginning position 
                house = new newHouse();
		// Based on the emotion selected, populate the "words" and "filler words" arrays
		if(keyword == "angry")
		{
			level1words = level1angry;
			fillerWords = fillerWordsAngry;
		}
		else if(keyword == "disgusted")
		{
			level1words = level1disgusted;
			fillerWords = fillerWordsDisgusted;
		}
		else if(keyword == "fearful")
		{
			level1words = level1fearful;
			fillerWords = fillerWordsFearful;
		}
		else if(keyword == "happy")
		{
			level1words = level1happy;
			fillerWords = fillerWordsHappy;
		}
		else if(keyword == "sad")
		{
			level1words = level1sad;
			fillerWords = fillerWordsSad;
		}
		else
		{
			level1words = level1surprised;
			fillerWords = fillerWordsSurprised;
		}
                level1words.forEach(word => {
                    var position = Math.floor(Math.random() * (425 - 5)) + 5;
                    wordsToFall.push(new wordComponent(word, keyword, position, 80))
                });
                fillerWords.forEach(word =>{
                    var position = Math.floor(Math.random() * (425 - 5)) + 5;
                    wordsToFall.push(new wordComponent(word, 'false', position, 80))
                })
                const temp = wordsToFall.sort((a, b) => 0.5 - Math.random());
                wordsToFall = temp;
                
            }
            var gameArea = {
                // create canvas, remove start game button and place canvas in container
                canvas : document.createElement("canvas"),
                start : function() {
                    this.interval = 0;
                    this.canvas.id = "blueGameCanvas";
                    this.canvas.width = 480;
                    this.canvas.height = 270;
                    this.gameOver = false;
                    this.context = this.canvas.getContext("2d");
                    this.canvas.style.backgroundColor = "rgb(121, 166, 224)";
                    this.context.font = "20px Comic Sans";
                    document.getElementById("angryButton").remove()
		    document.getElementById("disgustedButton").remove()
		    document.getElementById("fearfulButton").remove()
		    document.getElementById("happyButton").remove()
		    document.getElementById("sadButton").remove()
		    document.getElementById("surprisedButton").remove()
                    document.getElementById("instructions").remove()
                    document.getElementById('gameCanvas').appendChild(this.canvas);
                    //runs updateGameArea every 20ms
                    this.interval = setInterval(updateFunctions, 20);
                    this.score = 0
                    // runs key up/down handler when the left/right arrows are pressed
                    document.addEventListener("keydown", keyDownHandler, false);
                    document.addEventListener("keyup", keyUpHandler, false);
                },
                clear : function() {
                    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
                }
                }
            
                // create component for each word
                function wordComponent(word, family, x, y) {
                    this.word = word
                    this.family = family
                    this.x = x
                    this.y = y
                    this.update = function(){
                        gameArea.context.fillText(this.word, this.x, this.y);
                        }   
                }

                //create a house that the words will fall into
                // this needs to move left and right with the mouse
                function newHouse() {
                    this.x = 100 //starting position
                    const image = document.getElementById("houseImage")
                    // draws the image in the correct position every time the canvas is updated
                    this.update = function(){
                        gameArea.context.drawImage(image, this.x, 175,100, 100)
                    }
                }
                // handles when keys are continuosly pressed or not
                function keyDownHandler(e) {
                    if (e.key === "Right" || e.key === "ArrowRight") {
                        rightPressed = true;
                    } else if (e.key === "Left" || e.key === "ArrowLeft") {
                        leftPressed = true;
                    }
                }
                function keyUpHandler(e) {
                    if (e.key === "Right" || e.key === "ArrowRight") {
                        rightPressed = false;
                    } else if (e.key === "Left" || e.key === "ArrowLeft") {
                        leftPressed = false;
                    }
                }

                
                // function to deal with the words falling
                // if correct word lands in house,the word falls in, add points
                // otherwise word continues to fall, save word, lose point
                function wordsFallOrHit(word, house, gameArea) {
                    // what happens when word hits top of image
                    if (word.y == 200) {
                        // what happens if it hits the house
                        if (house.x < word.x && word.x < house.x + 50){ //if the word is within the house
                            // create a text node and add it to house of words
                            // depending on whether it's in the family or not, it should change colour
                            let li = document.createElement('li');
                            li.innerText = word.word;
                            //const houseWord = document.createTextNode(word.word)
                            li.className = 'selected-word';
                            if (word.family =="false"){
                                document.getElementById("incorrectList").appendChild(li);
                                gameArea.score -= 1;
								misclassifications++;
                                document.getElementById("score").innerHTML = scoreText.concat(String(gameArea.score));
                            } else {
                                //x position in the house is a random number between 20 and 215
                                x = Math.floor(20 + Math.random() * 195)
                                //x position in the house is a random number between 20 and 215
                                y = Math.floor(140 + Math.random() * 110)
                                document.getElementById("correctList").appendChild(li);
                                gameArea.score += 3;
								correctWords++;
                                document.getElementById("score").innerHTML = scoreText.concat(String(gameArea.score));
                            }
                            word.y = 400; //remove word from game display
                        // what happens if the user misses
                        } else {
                            if (word.family != "false"){ //misses and is in the family - lose a point
                                gameArea.score -= 2
								missedWords++;
                                document.getElementById("score").innerHTML = scoreText.concat(String(gameArea.score));
                            }
							else correctOmissions++;
                            word.y += 1
                            word.update();
                        }
                        // when the word is just falling
                    } else {
                        if(word.y <= 260){
                            word.y += 1;
                            word.update();
                        }   
                    }
                }

                // update until all words have fallen
                // at the end of the game, see what words are in the house, see if you go up a level

                //this allows there to be a fast and slow function, words fall at a slower speed than the game is updated
                function updateFunctions() {
                    updateGameArea()
                    addFallingWord()
                }

                function addFallingWord() {
                    if(ticker % 100 == 0){
                        fallingWords.push(wordsToFall.pop());
                    }
                    
                }

                function updateGameArea() {
                    ticker += 1;
                    gameArea.clear();
                    fallingWords.forEach(word =>{
                        wordsFallOrHit(word, house, gameArea)
                    })
                    
                    

                    // move the house with arrows, only up to boundaries of the canvas
                    if (rightPressed) {
                        house.x = Math.min(house.x + 5, gameArea.canvas.width - 100);
                    } else if (leftPressed) {
                        house.x = Math.max(house.x - 5, 0);
                    }
                    house.update();
                    // when all the words have fallen, trigger game over
                    if (wordsToFall.length ==0 && !gameArea.gameOver){
                        gameArea.gameOver = true;
                        gameArea.clear();
			// Display the popup
			document.getElementById("gameOverPopup").style = "";
			document.getElementById("gameScore").innerHTML = "Your score is " + gameArea.score;
			document.getElementById("correctWords").innerHTML = "You got " + (correctWords + correctOmissions) + " words right";
			document.getElementById("incorrectWords").innerHTML = "You got " + (misclassifications + missedWords) + " words wrong ("
				+ misclassifications + " misclassifications, " + missedWords + " missed words)";
			var percentCorrect = (correctWords + correctOmissions) / (correctWords + correctOmissions + misclassifications + missedWords) * 100.0;
			document.getElementById("percentage").innerHTML = "Your percent correct was " + Math.round(percentCorrect) + "%";
                    //    alert("GAME OVER \n Your score is ".concat(String(gameArea.score)));
                        document.getElementById("blueGameCanvas").remove()
                        let finishText = document.createTextNode("Well done for making your feelings family! \n The words in green are correct but the words in red aren't. Why do you think the red words aren't in the family?");
                        let reengageText = document.createTextNode("\n It's time to return to learning now, remember you can always speak to someone about how you're feeling");
                        let br = document.createElement("br");
                        document.getElementById("instructionsDiv").appendChild(finishText);
                        document.getElementById("instructionsDiv").appendChild(br);
                        document.getElementById("instructionsDiv").appendChild(br);
                        document.getElementById("instructionsDiv").appendChild(reengageText);
                        clearInterval(gameArea.interval);
                    }
                }
				
				function closePopup() { document.getElementById("gameOverPopup").style = "display:none"; }

        </script>

    </body>

</html>
