<html lang="en">
<%- include('./partials/head.ejs') %>
    <body>
        <nav class="mouseM">
        <ul class="header">
            <li><a>THE THINKING SPACE</a></li>
            <li class="home" style="float: right;"><a href="/"><i class="fa-solid fa-house"></i></a></li>
        </ul>
        </nav>
        <div class="maincontainer">
            <div class="container1 mouseM" id="gameCanvas">  
                <h1 class="colouredText">Feeling Families</h1>
                <div class="houseContainer">
                    
                </div>
                <p id="instructions">The aim of the game is to put feelings into families!
                    <br>First, choose the head of the family. This is a key emotion.
                    <br>Words will start coming down and you need to catch them in the house if that word is related to the head of the family.
                    <br>Move your house left and right using the arrows to catch the falling words and avoid the unrelated words.
                    <br>You'll get points for every feeling word you bring home!
                </p>
                <!--need to centre this button-->
                <button onclick="startGame('angry')" class="button" id="angryButton">Angry</button>
                
            </div>

            <div class="container2 mouseM">
                <h1 class="colouredText">Your Feelings Family</h1>
                <div class="houseContainer">
                    <img class="logo" id="houseImage" src="images/house.png" alt="house image" style="width: 300px; height: auto;">
                </div>
                <div class="houseText" id="houseText">

                </div>
            </div>

        </div>
          <div class="clear"></div>

        <!-- Footer with logo and motto aligned to left and right -->
        <footer class="footer">
        <img class="logo" src="images/logo.png" alt="Raymer Enterprises Ltd" width="212" height="104">
        <span class="motto mouseM">With emotional health in mind</span>
        </footer>

        <script>
            var word1;
            //additional words 1 - angry
            var level1angry = ['aggressive', 'bitter', 'critical', 'distant', 'frustrated', 'hateful', 'humiliated', 'hurt', 'insecure', 'irritated', 'mad']
            var fillerWords = ['happy', 'bright', 'bored', 'silly', 'strong', 'tense', 'confused']
            var fallingWords = [];
            const image = document.getElementById("houseImage")
            //document.getElementById("houseImage").remove()
            let rightPressed = false;
            let leftPressed = false;

            function startGame(keyword) {
                gameArea.start();
                // create components for words, they have a random x beginning position 
                house = new newHouse();
                level1angry.forEach(word => {
                    var position = Math.floor(Math.random() * (450 - 5)) + 5;
                    fallingWords.push(new wordComponent(word, keyword, position, 80))
                });
                fillerWords.forEach(word =>{
                    var position = Math.floor(Math.random() * (450 - 5)) + 5;
                    fallingWords.push(new wordComponent(word, 'false', position, 200))
                })
                const temp = fallingWords.sort((a, b) => 0.5 - Math.random());
                fallingWords = temp;
                
            }
            var gameArea = {
                // create canvas, remove start game button and place canvas in container
                canvas : document.createElement("canvas"),
                start : function() {
                    this.interval = 0;
                    this.canvas.width = 480;
                    this.canvas.height = 270;
                    this.context = this.canvas.getContext("2d");
                    this.canvas.style.backgroundColor = "lightblue";
                    this.context.font = "20px Comic Sans";
                    document.getElementById("angryButton").remove()
                    document.getElementById("instructions").remove()
                    document.getElementById('gameCanvas').appendChild(this.canvas);
                    //runs updateGameArea every 20ms
                    this.interval = setInterval(updateGameArea, 20);
                    this.score = 0
                    // runs key up/down handler when the left/right arrows are pressed
                    document.addEventListener("keydown", keyDownHandler, false);
                    document.addEventListener("keyup", keyUpHandler, false);
                },
                clear : function() {
                    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
                }
                }
            
                // create component for each word
                function wordComponent(word, family, x, y) {
                    this.word = word
                    this.family = family
                    this.x = x
                    this.y = y
                    this.update = function(){
                        gameArea.context.fillText(this.word, this.x, this.y);
                        }   
                }

                //create a house that the words will fall into
                // this needs to move left and right with the mouse
                function newHouse() {
                    this.x = 20
                    // array of wordComponents which have hit the house
                    // when wordComponent hits the house, it gets added to this array
                    // when house gets moved, these words move too
                    this.words = []

                    // need to make this a png
                    const image = document.getElementById("houseImage")
                    this.update = function(){
                        gameArea.context.drawImage(image, this.x, 175,100, 100)
                    }
                }
                // handles when keys are continuosly pressed or not
                function keyDownHandler(e) {
                    if (e.key === "Right" || e.key === "ArrowRight") {
                        rightPressed = true;
                    } else if (e.key === "Left" || e.key === "ArrowLeft") {
                        leftPressed = true;
                    }
                }
                function keyUpHandler(e) {
                    if (e.key === "Right" || e.key === "ArrowRight") {
                        rightPressed = false;
                    } else if (e.key === "Left" || e.key === "ArrowLeft") {
                        leftPressed = false;
                    }
                }

                
                // function to deal with the words falling
                function wordsFallOrHit(word, house, gameArea) {
                    // what happens when word hits top of image
                    if (word.y == 200) {
                        // what happens if it hits the house
                        if (house.x < word.x && word.x < house.x + 50){ //if the word is within the house
                            // add captured word to the house of words
                            const houseWord = document.createTextNode("hello")
                            console.log(typeof(houseWord))
                            document.getElementById("houseText").appendChild(houseWord);
                            gameArea.score += 1;
                            word.y = 400; //remove word from game display
                        // what happens if the user misses
                        } else {
                            gameArea.score -= 1
                            word.y += 1
                            word.update();
                        }
                        // when the word is just falling
                    } else {
                        if(word.y <= 260){
                            word.y += 1;
                            word.update();
                        }   
                    }
                }

                // update until all words have fallen
                // if it does, the word falls in, add point
                // otherwise word continues to fall, save word, lose point
                // at the end of the game, see what words are in the house, see if you go up a level

                function updateGameArea() {
                    gameArea.clear();
                    fallingWords.forEach(word =>{
                        wordsFallOrHit(word, house, gameArea)
                    })
                    
                    

                    // move the house with arrows, only up to boundaries of the canvas
                    if (rightPressed) {
                        house.x = Math.min(house.x + 5, gameArea.canvas.width - 100);
                    } else if (leftPressed) {
                        house.x = Math.max(house.x - 5, 0);
                    }
                    house.update();
                }

        </script>

    </body>

</html>
